namespace rocketscience {
};

[Error]
enum LaunchError {
  "RocketLaunch",
};

// Which direction to point to.
enum Direction {
    "Up",
    "Down",
};

// A vessel consists of several parts,
// such as the command pod, tanks or the engine.
dictionary Part {
    string name;
    i64 cost;
    i64 weight;
};

// A rocket we can launch into orbit.
interface Rocket {
    // Construct a new named rocket.
    constructor(string name);

    // Show the rocket's configuration.
    string show();

    // Try to launch the rocket into orbit.
    //
    // This will throw a `LaunchError` if the rocket is not pointing up.
    // Returns `true` if the launch succeeded
    // or `false` if the rocket was too heavy or too expensive.
    [Throws=LaunchError]
    boolean launch();

    // Add a new part to the rocket.
    void add(Part part);

    // Lock the steering into a single direction.
    void lock_steering(Direction direction);
};
